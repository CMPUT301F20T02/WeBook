Index: app/src/main/java/com/example/webook/ShowUserDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n/**\r\n * This is activity shows a user's profile\r\n * @pram EXTRA_MESSAGE User item to show in profile, clicked in list by user in formal actvity\r\n */\r\npublic class ShowUserDetail extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_profile);\r\n        Intent intent = getIntent();\r\n        final User user = (User)intent.getSerializableExtra(BorrowerSearchUserPage.EXTRA_MESSAGE);\r\n        final TextView username = findViewById(R.id.user_username);\r\n        final TextView userType = findViewById(R.id.user_userType);\r\n        final TextView  phone = findViewById(R.id.user_phone);\r\n        final TextView  email = findViewById(R.id.user_email);\r\n        final TextView description = findViewById(R.id.user_description);\r\n        final ImageView image = findViewById(R.id.user_icon);\r\n        image.setImageDrawable(getResources().getDrawable(R.drawable.empty_user_icon));\r\n        username.setText(user.getUsername());\r\n        userType.setText(user.getUserType());\r\n        phone.setText(user.getPhoneNumber());\r\n        email.setText(user.getEmail());\r\n        description.setText(user.getDescription());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/ShowUserDetail.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/ShowUserDetail.java	(date 1606439026098)
@@ -18,7 +18,7 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_user_profile);
         Intent intent = getIntent();
-        final User user = (User)intent.getSerializableExtra(BorrowerSearchUserPage.EXTRA_MESSAGE);
+        final User user = (User)intent.getSerializableExtra("user");
         final TextView username = findViewById(R.id.user_username);
         final TextView userType = findViewById(R.id.user_userType);
         final TextView  phone = findViewById(R.id.user_phone);
Index: app/src/main/java/com/example/webook/BookRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport android.location.Location;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n/**\r\n * This is a class for BookRequest object which is a sub class of Request\r\n */\r\npublic class BookRequest extends Request {\r\n    private boolean waiting = false;\r\n\r\n    /**\r\n     * constructor of the BookRequest with no parameter.\r\n     */\r\n    BookRequest(){}\r\n\r\n    /**\r\n     * constructor of the BookRequest with all parameters, super comes from Request class.\r\n     * @param book\r\n     * @param requestee\r\n     * @param requester\r\n     * @param date\r\n     * @param geoLocation\r\n     */\r\n\r\n    BookRequest(Book book, String requestee, ArrayList<String> requester, ArrayList<Integer> date, ArrayList<Double> geoLocation) {\r\n\r\n        super(book, requestee, requester, date, geoLocation);\r\n    }\r\n\r\n    /**\r\n     * getter of the waiting of the request (pending, accepted or declined).\r\n     * @return waiting of the request\r\n     */\r\n    public boolean getwaiting() {\r\n        return waiting;\r\n    }\r\n\r\n    /**\r\n     * setter of the waiting of the request (pending, accepted or declined).\r\n     * @param waiting\r\n     */\r\n    public void setwaiting(boolean waiting) {\r\n        this.waiting = waiting;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/BookRequest.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/BookRequest.java	(date 1606439951838)
@@ -9,6 +9,7 @@
  */
 public class BookRequest extends Request {
     private boolean waiting = false;
+    private boolean notify = false;
 
     /**
      * constructor of the BookRequest with no parameter.
@@ -44,4 +45,12 @@
     public void setwaiting(boolean waiting) {
         this.waiting = waiting;
     }
+
+    public boolean getNotify() {
+        return notify;
+    }
+
+    public void setNotify(boolean notify) {
+        this.notify = notify;
+    }
 }
Index: app/src/main/java/com/example/webook/DataBaseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.net.Uri;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.Continuation;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.gms.tasks.Tasks;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.ListenerRegistration;\r\nimport com.google.firebase.firestore.MetadataChanges;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n/**\r\n * This is the class keeps functions handle database operation\r\n * Or handling information get from database\r\n */\r\npublic class DataBaseManager {\r\n    FirebaseFirestore db;\r\n    StorageReference storageReference;\r\n    CollectionReference collectionReference;\r\n    String TAG;\r\n\r\n\r\n    public DataBaseManager(){\r\n        db = FirebaseFirestore.getInstance();\r\n        storageReference = FirebaseStorage.getInstance().getReference();\r\n    }\r\n\r\n\r\n    /**\r\n     * This check for username and password consistency in database\r\n     * If consist and login success, jump to homepage for users with different usertype\r\n     * @param username\r\n     * @param pwd\r\n     * These are username and password you want to check\r\n     */\r\n    public void authenticate(final String username, final String pwd, final MainActivity mainActivity){\r\n        final DocumentReference userRef = db.collection(\"users\").document(username);\r\n        userRef.get().addOnCompleteListener( new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    DocumentSnapshot document = task.getResult();\r\n                    int duration = Toast.LENGTH_SHORT;\r\n                    if (document.exists() && document.getString(\"pwd\").equals(pwd)) {\r\n                        Intent intent;\r\n                        String textToShow = \"Login success, welcome \" + username;\r\n                        Toast toast = Toast.makeText(mainActivity, textToShow, Toast.LENGTH_LONG);\r\n                        toast.show();\r\n                        if (document.getString(\"userType\").equals(\"owner\")){\r\n                            intent = new Intent(mainActivity, OwnerHomepage.class);\r\n                            Owner owner = new Owner(username, document.getString(\"email\"),\r\n                                    document.getString(\"phoneNumber\"), document.getString(\"pwd\"), document.getString(\"description\"), document.getString(\"user_image\"));\r\n                            owner.setBookList((ArrayList<String>) document.get(\"bookList\"));\r\n                            intent.putExtra(\"user\", owner);\r\n                            mainActivity.startActivity(intent);\r\n                            ((Activity)mainActivity).overridePendingTransition(R.anim.push_up_in,R.anim.push_up_out);\r\n                        }else if (document.getString(\"userType\").equals(\"borrower\")) {\r\n                            intent = new Intent(mainActivity, BorrowerHomepage.class);\r\n                            Borrower borrower = new Borrower(username, document.getString(\"email\"),\r\n                                    document.getString(\"phoneNumber\"), document.getString(\"pwd\"), document.getString(\"description\"), document.getString(\"user_image\"));\r\n                            intent.putExtra(\"user\", borrower);\r\n                            mainActivity.startActivity(intent);\r\n                            ((Activity)mainActivity).overridePendingTransition(R.anim.push_up_in,R.anim.push_up_out);\r\n                        }\r\n                    } else {\r\n                        String textToShow = \"Wrong username or password, please try again.\";\r\n                        Toast toast = Toast.makeText(mainActivity, textToShow, Toast.LENGTH_LONG);\r\n                        toast.show();\r\n                    }\r\n                } else {\r\n                    Log.d(TAG, \"Failed with: \", task.getException());\r\n                }\r\n            }\r\n        } );\r\n    }\r\n\t\r\n\r\n    /**\r\n     * This search books by keyword in multiple fields in database\r\n     * @param message\r\n     * @param borrowerSearchBookPage\r\n     * These are the keyword you want to search and the page you want to show the data\r\n     */\r\n    public void BorrowerSearchBook(final String message, final BorrowerSearchBookPage borrowerSearchBookPage){\r\n        collectionReference= db.collection(\"books\");\r\n        collectionReference\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            borrowerSearchBookPage.dataList.clear();\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                Log.d(TAG, document.getId());\r\n                                String status = (String) document.getData().get(\"status\");\r\n                                if(!status.equals(\"borrowed\") && !status.equals(\"accepted\")){\r\n                                    String title = (String) document.getData().get(\"title\");\r\n                                    String author = (String) document.getData().get(\"author\");\r\n                                    String isbn = (String) document.getData().get(\"isbn\");\r\n                                    String description = (String) document.getData().get(\"description\");\r\n                                    String owner = (String) document.getData().get(\"owner\");\r\n\r\n                                    if(title.contains(message)) {\r\n                                        borrowerSearchBookPage.dataList.add(new Book(title, isbn, author, status, owner, null, description));\r\n                                    }\r\n                                    else if (author.contains(message)) {\r\n                                        borrowerSearchBookPage.dataList.add(new Book(title, isbn, author, status, owner, null, description));\r\n                                    }\r\n                                    else if(isbn.contains(message)) {\r\n                                        borrowerSearchBookPage.dataList.add(new Book(title, isbn, author, status, owner, null, description));\r\n                                    }else if(description!= null){\r\n                                        if(description.contains(message)) {\r\n                                            borrowerSearchBookPage.dataList.add(new Book(title, isbn, author, status, owner, null, description));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            borrowerSearchBookPage.bookAdapter.notifyDataSetChanged();\r\n                        } else {\r\n                            Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This search user by username in database\r\n     * @param message\r\n     * @param borrowerSearchUserPage\r\n     * These are the username you want to search and the page you want to show the data\r\n     */\r\n    public void BorrowerSearchUser(final String message, final BorrowerSearchUserPage borrowerSearchUserPage){\r\n        collectionReference= db.collection(\"users\");\r\n        collectionReference.get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            borrowerSearchUserPage.dataList.clear();\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                Log.d(TAG, document.getId());\r\n                                String Username = document.getId();\r\n                                String email = (String) document.getData().get(\"email\");\r\n                                String description =  (String) document.getData().get(\"description\");\r\n                                String pwd =  (String) document.getData().get(\"pwd\");\r\n                                String phoneNumber =  (String) document.getData().get(\"phoneNumber\");\r\n                                String userType = (String) document.getData().get(\"userType\");\r\n                                if(Username.contains(message)){\r\n                                    if(userType.equals(\"borrower\")) {\r\n                                        borrowerSearchUserPage.dataList.add(new Borrower(Username,email, phoneNumber, pwd, description,null));\r\n                                    }else{\r\n                                        borrowerSearchUserPage.dataList.add(new Owner(Username,email, phoneNumber, pwd, description,null));\r\n                                    }\r\n                                }\r\n                            }\r\n                            borrowerSearchUserPage.userAdapter.notifyDataSetChanged();\r\n                        } else {\r\n                            Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void OwnerSearchUser(final String message, final OwnerSearchUserPage ownerSearchUserPage){\r\n        collectionReference= db.collection(\"users\");\r\n        collectionReference.get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            ownerSearchUserPage.dataList.clear();\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                Log.d(TAG, document.getId());\r\n                                String Username = document.getId();\r\n                                String email = (String) document.getData().get(\"email\");\r\n                                String description =  (String) document.getData().get(\"description\");\r\n                                String pwd =  (String) document.getData().get(\"pwd\");\r\n                                String phoneNumber =  (String) document.getData().get(\"phoneNumber\");\r\n                                String userType = (String) document.getData().get(\"userType\");\r\n                                if(Username.contains(message)){\r\n                                    if(userType.equals(\"borrower\")) {\r\n                                        ownerSearchUserPage.dataList.add(new Borrower(Username,email, phoneNumber, pwd, description,null));\r\n                                    }else{\r\n                                        ownerSearchUserPage.dataList.add(new Owner(Username,email, phoneNumber, pwd, description,null));\r\n                                    }\r\n                                }\r\n                            }\r\n                            ownerSearchUserPage.userAdapter.notifyDataSetChanged();\r\n                        } else {\r\n                            Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    /**\r\n     * This add a book document in database\r\n     * @param bitmap\r\n     * @param book\r\n     * @param owner\r\n     * These are the picture, book item and owner information that you want to add into the document\r\n     */\r\n    public void addBook(Bitmap bitmap, final Book book, final Owner owner){\r\n        if (bitmap != null) {\r\n            final StorageReference imageReference = storageReference.child( \"images/\" + System.currentTimeMillis());\r\n            ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);\r\n            byte[] byteArray = stream.toByteArray();\r\n\r\n            imageReference.putBytes(byteArray)\r\n                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                            imageReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                @Override\r\n                                public void onSuccess(Uri uri) {\r\n                                    String url = uri.toString();\r\n                                    book.setImage(url);\r\n                                    uploadBook(book,owner);\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Log.w(\"Upload image\", \"Error uploading.\", e);\r\n                        }\r\n                    });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * This change a book document in database\r\n     * @param book\r\n     * @param owner\r\n     * These are book and its owner that the document you want to change have\r\n     */\r\n    private void uploadBook(final Book book, final Owner owner){\r\n        db.collection(\"books\").document(book.getISBN())\r\n                .set(book)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        updateOwnerBookList(owner, book);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"Add book\", \"Error adding book\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    /**\r\n     * This change the bookList filed in a user document in database\r\n     * @param owner\r\n     * @param book\r\n     * These are user and the book item you want to add into booklist\r\n     */\r\n    private void updateOwnerBookList(Owner owner, final Book book){\r\n        db.collection(\"users\").document(owner.getUsername())\r\n                .update(\"bookList\", FieldValue.arrayUnion(book.getISBN()))\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"updateUserBookList\", \"Error updating\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    /**\r\n     * This send a bookRequest into database\r\n     * @param newRequest\r\n     * @param borrower\r\n     * These are request infomation and the user who send this request\r\n     */\r\n    public void sendBookRequest(final Request newRequest, final Borrower borrower){\r\n        collectionReference = db.collection(\"requests\");\r\n        TAG = \"\";\r\n        collectionReference\r\n                .document(newRequest.getBook().getISBN())\r\n                .update(\r\n                        \"requester\", FieldValue.arrayUnion(borrower.getUsername()),\r\n                        \"book.status\", \"requested\"\r\n                )\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"Data has been added successfully!\");\r\n                        db.collection(\"users\").document(newRequest.getBook().getOwner()).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                System.out.println(\"in onComplete\");\r\n                                if (task.isSuccessful()) {\r\n                                    System.out.println(\"in first if\");\r\n                                    DocumentSnapshot documentSnapshot = task.getResult();\r\n                                    if (documentSnapshot.exists()){\r\n                                        System.out.println(\"in second if\");\r\n                                        ArrayList<String> requestList = (ArrayList<String>) documentSnapshot.get(\"requestList\");\r\n                                        requestList.add(newRequest.getBook().getISBN());\r\n                                        db.collection(\"users\").document(newRequest.getBook().getOwner())\r\n                                                .update(\r\n                                                        \"requestList\", requestList\r\n                                                )\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        System.out.println(\"haha\");\r\n                                                    }\r\n                                                })\r\n                                                .addOnFailureListener(new OnFailureListener() {\r\n                                                    @Override\r\n                                                    public void onFailure(@NonNull Exception e) {\r\n                                                        System.out.println(\"fuck\");\r\n                                                    }\r\n                                                });\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        collectionReference.document(newRequest.getBook().getISBN()).set(newRequest);\r\n\r\n                        db.collection(\"requests\").document(newRequest.getBook().getISBN()).update(\r\n                                \"book.status\", \"requested\"\r\n                        );\r\n                        Log.d(TAG, \"Data addition failed\" + e.toString());\r\n\r\n                        db.collection(\"books\").document(newRequest.getBook().getISBN())\r\n                                .update(\r\n                                        \"status\", \"requested\"\r\n                                );\r\n                        db.collection(\"users\").document(newRequest.getBook().getOwner()).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                System.out.println(\"in onComplete\");\r\n                                if (task.isSuccessful()) {\r\n                                    System.out.println(\"in first if\");\r\n                                    DocumentSnapshot documentSnapshot = task.getResult();\r\n                                    if (documentSnapshot.exists()){\r\n                                        System.out.println(\"in second if\");\r\n                                        ArrayList<String> requestList = (ArrayList<String>) documentSnapshot.get(\"requestList\");\r\n                                        requestList.add(newRequest.getBook().getISBN());\r\n                                        db.collection(\"users\").document(newRequest.getBook().getOwner())\r\n                                                .update(\r\n                                                        \"requestList\", requestList\r\n                                                )\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                    }\r\n                                                })\r\n                                                .addOnFailureListener(new OnFailureListener() {\r\n                                                    @Override\r\n                                                    public void onFailure(@NonNull Exception e) {\r\n                                                    }\r\n                                                });\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    /**\r\n     * This upload a user document in database\r\n     * @param username\r\n     * @param phoneText\r\n     * @param emailText\r\n     * @param descriptionText\r\n     * These are new field values you want your document to have\r\n     */\r\n    public void updateInfo(String username, String phoneText, String emailText, String descriptionText){\r\n        DocumentReference userRef = db.collection(\"users\").document(username);\r\n        userRef.update(\"phoneNumber\", phoneText);\r\n        userRef.update(\"email\", emailText);\r\n        userRef.update(\"description\", descriptionText);\r\n    }\r\n\r\n\r\n    /**\r\n     * This search for requests in the database which request for a book and show the list\r\n     * @param isbn\r\n     * @param sameBookRequest\r\n     * These are the isbn code the requested book had and the page you want to show the list\r\n     */\r\n    public void getSameBookRequest(String isbn, final SameBookRequestList sameBookRequest){\r\n        DocumentReference docRef = db.collection(\"requests\").document(isbn);\r\n        docRef.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                BookRequest request = documentSnapshot.toObject(BookRequest.class);\r\n                sameBookRequest.dataListClear();\r\n                for(int i = 0; i < request.getRequester().size(); i++){\r\n                    sameBookRequest.dataListAdd(request);\r\n                }\r\n                sameBookRequest.bookAdapterChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This show the updated request list for a book in the database\r\n     * @param isbn\r\n     * @param sameBookRequest\r\n     * These are the isbn code the requested book had and the page you want to show the list\r\n     */\r\n    public  void declinePressed(String isbn, final SameBookRequestList sameBookRequest){\r\n        DocumentReference docRef = db.collection(\"requests\").document(isbn);\r\n        docRef.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                BookRequest request = documentSnapshot.toObject(BookRequest.class);\r\n                sameBookRequest.dataListClear();\r\n                for(int i = 0; i < request.getRequester().size(); i++){\r\n                    sameBookRequest.dataListAdd(request);\r\n                }\r\n                sameBookRequest.bookAdapterChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This check if document with same name exist in database\r\n     * If not, it add a document into user with usertype owner in database\r\n     * @param usernameText\r\n     * @param emailText\r\n     * @param phoneText\r\n     * @param pwdText\r\n     * @param descriptionText\r\n     * @param signUpActivity\r\n     * These are the user information your document will have\r\n     */\r\n    public void ownerSignUp(final String usernameText, final String emailText,\r\n                            final String phoneText, final String pwdText, final String descriptionText, final SignUpActivity signUpActivity){\r\n        final DocumentReference userRef = db.collection(\"users\").document(usernameText);\r\n        userRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()){\r\n                    DocumentSnapshot document = task.getResult();\r\n                    if (document.exists()){\r\n                        Toast toast = Toast.makeText(signUpActivity, \"Username already in use!\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }else{\r\n                        userRef.set(new Owner(usernameText, emailText, phoneText, pwdText, descriptionText, null));\r\n                        Toast toast = Toast.makeText(signUpActivity, \"Sign up successful!\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                        signUpActivity.finish();\r\n                        ((Activity)signUpActivity).overridePendingTransition(R.anim.push_right_in, R.anim.push_right_out);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\t\r\n\t\r\n    /**\r\n     * This check if document with same name exist in database\r\n     * If not, it add a document into user with usertype borrower in database\r\n     * @param usernameText\r\n     * @param emailText\r\n     * @param phoneText\r\n     * @param pwdText\r\n     * @param descriptionText\r\n     * @param signUpActivity\r\n     * These are the user information your document will have\r\n     */\r\n    public void borrowerSignUp(final String usernameText, final String emailText,\r\n                            final String phoneText, final String pwdText, final String descriptionText, final SignUpActivity signUpActivity){\r\n        final DocumentReference userRef = db.collection(\"users\").document(usernameText);\r\n        userRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()){\r\n                    DocumentSnapshot document = task.getResult();\r\n                    if (document.exists()){\r\n                        Toast toast = Toast.makeText(signUpActivity, \"Username already in use!\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }else{\r\n                        userRef.set(new Borrower(usernameText, emailText, phoneText, pwdText, descriptionText, null));\r\n                        Toast toast = Toast.makeText(signUpActivity, \"Sign up successful!\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                        signUpActivity.finish();\r\n                        ((Activity)signUpActivity).overridePendingTransition(R.anim.push_right_in, R.anim.push_right_out);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void OwnerRequestPageRequestSnapShotListener(final OwnerRequestPageActivity ownerRequestPageActivity, final String username){\r\n        CollectionReference requestRef = db.collection(\"requests\");\r\n        requestRef\r\n                .whereEqualTo(\"requestee\", username)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        assert value != null;\r\n                        List<DocumentSnapshot> documents = value.getDocuments();\r\n                        ArrayList<BookRequest> bookRequests = new ArrayList<>();\r\n                        for (int i = 0; i < documents.size(); i++){\r\n                            BookRequest temp = documents.get(i).toObject(BookRequest.class);\r\n                            bookRequests.add(temp);\r\n                        }\r\n                        ownerRequestPageActivity.setArrayList(bookRequests);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void BorrowerRequestPageRequestSnapShotListener(final BorrowerRequestPageActivity borrowerRequestPageActivity, final String username){\r\n        CollectionReference requestRef = db.collection(\"requests\");\r\n        requestRef\r\n                .whereArrayContains(\"requester\", username)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        assert value != null;\r\n                        List<DocumentSnapshot> documents = value.getDocuments();\r\n                        ArrayList<BookRequest> bookRequests = new ArrayList<>();\r\n                        for (int i = 0; i < documents.size(); i++){\r\n                            BookRequest temp = documents.get(i).toObject(BookRequest.class);\r\n                            bookRequests.add(temp);\r\n                        }\r\n                        borrowerRequestPageActivity.setArrayList(bookRequests);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void OwnerHomePageAddBookSnapShotListener(final OwnerHomepage ownerHomepage, final String username){\r\n        final CollectionReference bookRef = db.collection(\"books\");\r\n        bookRef.addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                db.collection(\"users\").document(username).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n\r\n                        if(task.isSuccessful()){\r\n                            ownerHomepage.setBookArrayList(new ArrayList<Book>());\r\n                            ownerHomepage.ownerSetBookList(new ArrayList<String>());\r\n                            DocumentSnapshot document = task.getResult();\r\n                            final ArrayList<String> bookisbn = (ArrayList<String>) document.get(\"bookList\");\r\n                            downloadBooks(ownerHomepage, bookisbn);\r\n\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private void downloadBooks(final OwnerHomepage ownerHomepage , final ArrayList<String> bookisbn) {\r\n        Log.d(\"I'm fine:\", bookisbn.toString());\r\n        CollectionReference bookRef = db.collection(\"books\");\r\n        for (int i = 0; i < bookisbn.size(); i++) {\r\n            DocumentReference bookRef1 = bookRef.document(bookisbn.get(i));\r\n            bookRef1.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {\r\n                            Book book = document.toObject(Book.class);\r\n                            if (!ownerHomepage.getOwnerBookList().contains(book.getISBN())){\r\n                                ownerHomepage.ownerAddBook(book.getISBN());\r\n                                ownerHomepage.addBookArrayList(book);\r\n                                ownerHomepage.setBookList();\r\n                                ownerHomepage.dataChanged();\r\n                                ownerHomepage.getAvailable();\r\n                                ownerHomepage.getAccepted();\r\n                                ownerHomepage.getRequested();\r\n                                ownerHomepage.getBorrowed();\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void OwnerHomePageAddUserSnapShotListener(final OwnerHomepage ownerHomepage, final String username){\r\n        DocumentReference userRef = db.collection(\"users\").document(username);\r\n        userRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                ownerHomepage.setBookArrayList(new ArrayList<Book>());\r\n                ownerHomepage.ownerSetBookList(new ArrayList<String>());\r\n                ArrayList<String> bookisbn = (ArrayList<String>) value.get(\"bookList\");\r\n                downloadBooks(ownerHomepage, bookisbn);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void BorrowerProfileAddUserSnapShotListener(final BorrowerProfileActivity borrowerProfileActivity, final String username){\r\n        DocumentReference userRef = db.collection(\"users\").document(username);\r\n        userRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                updateBorrowerInfo(value, borrowerProfileActivity);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void updateBorrowerInfo(DocumentSnapshot document, final BorrowerProfileActivity borrowerProfileActivity) {\r\n        Borrower borrower = document.toObject(Borrower.class);\r\n        borrowerProfileActivity.setUsername(borrower.getUsername());\r\n        borrowerProfileActivity.setUserType(borrower.getUserType());\r\n        borrowerProfileActivity.setPhone(borrower.getPhoneNumber());\r\n        borrowerProfileActivity.setEmail(borrower.getEmail());\r\n        borrowerProfileActivity.setDescription(borrower.getDescription());\r\n    }\r\n\r\n    public void OwnerProfileAddUserSnapShotListener(final OwnerProfileActivity ownerProfileActivity, final String username){\r\n        DocumentReference userRef = db.collection(\"users\").document(username);\r\n        userRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                updateOwnerInfo(value, ownerProfileActivity);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void updateOwnerInfo(DocumentSnapshot document, final OwnerProfileActivity ownerProfileActivity) {\r\n        Borrower borrower = document.toObject(Borrower.class);\r\n        ownerProfileActivity.setUsername(borrower.getUsername());\r\n        ownerProfileActivity.setUserType(borrower.getUserType());\r\n        ownerProfileActivity.setPhone(borrower.getPhoneNumber());\r\n        ownerProfileActivity.setEmail(borrower.getEmail());\r\n        ownerProfileActivity.setDescription(borrower.getDescription());\r\n    }\r\n\r\n    public void removeBook(Book book){\r\n        DocumentReference docRef = db.collection(\"books\").document(book.getISBN());\r\n        docRef.delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully deleted!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error deleting document\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void updateBook(final OwnerBookProfile ownerBookProfile, String isbn){\r\n        DocumentReference docRef = db.collection(\"books\").document(isbn);\r\n        System.out.println(isbn);\r\n        docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()){\r\n                    DocumentSnapshot document = task.getResult();\r\n                    System.out.println(\"I'm successful!\");\r\n                    Book selectBook = document.toObject(Book.class);\r\n                    System.out.println(\"I'm successful too\" + selectBook.getDescription());\r\n                    if (document.exists()) {\r\n                        System.out.println(\"I'm successful too!\");\r\n                        //Book selectBook = document.toObject(Book.class);\r\n                        ownerBookProfile.setTitle_text(selectBook.getTitle());\r\n                        ownerBookProfile.setAuthor_text(selectBook.getAuthor());\r\n                        ownerBookProfile.setDescription_text(selectBook.getDescription());\r\n                        ownerBookProfile.setIsbn_text(selectBook.getISBN());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void BookProfileAddUserSnapShotListener(final OwnerBookProfile ownerBookProfile, final String isbn){\r\n        DocumentReference bookRef = db.collection(\"books\").document(isbn);\r\n        bookRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (value.exists()){\r\n                    updateBookInfo(value, ownerBookProfile);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateBookInfo (DocumentSnapshot documentSnapshot, final OwnerBookProfile ownerBookProfile) {\r\n        Book book = documentSnapshot.toObject(Book.class);\r\n        ownerBookProfile.setTitle_text(book.getTitle());\r\n        ownerBookProfile.setIsbn_text(book.getISBN());\r\n        ownerBookProfile.setDescription_text(book.getDescription());\r\n        ownerBookProfile.setAuthor_text(book.getAuthor());\r\n    }\r\n\r\n    public void updateBook (String isbn, String title, String author, String des) {\r\n        DocumentReference bookRef = db.collection(\"books\").document(isbn);\r\n        bookRef.update(\"description\",des);\r\n        bookRef.update(\"title\",title);\r\n        bookRef.update(\"author\", author);\r\n    }\r\n\r\n    public void BorrowerHomepageBookAddSnapShotListener(final BorrowerHomepage borrowerHomepage, final String username){\r\n        /*\r\n        db.collection(\"books\")\r\n                .whereEqualTo(\"borrower\", username)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        List<DocumentSnapshot> documents = value.getDocuments();\r\n                        ArrayList<Book> books = new ArrayList<>();\r\n                        for (int i = 0; i < documents.size(); i++){\r\n                            Book temp = documents.get(i).toObject(Book.class);\r\n                            books.add(temp);\r\n                        }\r\n                        borrowerHomepage.setBorrowedBooks(books);\r\n                        borrowerHomepage.updateAllBooks();\r\n\r\n                    }\r\n                });\r\n\r\n         */\r\n\r\n        db.collection(\"requests\")\r\n                .whereArrayContains(\"requester\", username)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        assert value != null;\r\n                        List<DocumentSnapshot> documents = value.getDocuments();\r\n                        ArrayList<Book> pending = new ArrayList<>();\r\n                        ArrayList<Book> accepted = new ArrayList<>();\r\n                        ArrayList<Book> borrowed = new ArrayList<>();\r\n                        for (int i = 0; i < documents.size(); i++){\r\n                            BookRequest temp = documents.get(i).toObject(BookRequest.class);\r\n                            assert temp != null;\r\n                            Book book = temp.getBook();\r\n                            switch (book.getStatus()) {\r\n                                case \"requested\":\r\n                                    pending.add((book));\r\n                                    break;\r\n                                case \"accepted\":\r\n                                    accepted.add(book);\r\n                                    break;\r\n                                case \"borrowed\":\r\n                                    borrowed.add(book);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        borrowerHomepage.setBorrowedBooks(borrowed);\r\n                        borrowerHomepage.setRequestedBooks(pending);\r\n                        borrowerHomepage.setAcceptedBooks(accepted);\r\n                        borrowerHomepage.updateAllBooks();\r\n\r\n                    }\r\n                });\r\n        /*\r\n        db.collection(\"requests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()){\r\n                    QuerySnapshot snapshot = task.getResult();\r\n                    List<DocumentSnapshot> documents = snapshot.getDocuments();\r\n                    ArrayList<Book> requestedBooks = new ArrayList<>();\r\n                    ArrayList<Book> acceptedBooks = new ArrayList<>();\r\n                    for (int i = 0; i < documents.size(); i++){\r\n                        BookRequest request = documents.get(i).toObject(BookRequest.class);\r\n                        ArrayList<String> requester = request.getRequester();\r\n                        if (request.getStatus().equals(\"pending\") && requester.contains(username)){\r\n                            requestedBooks.add(request.getBook());\r\n                            System.out.println(\"pending \"+request.getBook().getTitle() );\r\n                        }else if (request.getStatus().equals(\"accepted\") && requester.contains(username)){\r\n                            acceptedBooks.add(request.getBook());\r\n                            System.out.println(\"accepted \"+ request.getBook().getTitle());\r\n                        }\r\n                    }\r\n                    borrowerHomepage.setRequestedBooks(requestedBooks);\r\n                    borrowerHomepage.setAcceptedBooks(acceptedBooks);\r\n                    borrowerHomepage.updateAllBooks();\r\n                }\r\n            }\r\n        });\r\n\r\n                 */\r\n\r\n    }\r\n\r\n    public void deleteBook(final OwnerBookProfile ownerBookProfile, String isbn){\r\n        db.collection(\"books\").document(isbn)\r\n                .delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast toast = Toast.makeText(ownerBookProfile, \"Deleted successfully\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast toast = Toast.makeText(ownerBookProfile, \"Delete failed\", Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void BorrowerHomepageRequestListener(final BorrowerHomepage borrowerHomepage, final String username){\r\n        db.collection(\"requests\")\r\n                .whereArrayContains(\"requester\", username)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        assert value != null;\r\n                        for (final DocumentChange dc : value.getDocumentChanges()) {\r\n                            switch (dc.getType()){\r\n                                case ADDED:\r\n                                    ListenerRegistration listenerRegistration = dc.getDocument().getReference()\r\n                                            .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                                                @Override\r\n                                                public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                                    if(value.get(\"time\") != null){\r\n                                                        if(Objects.equals(value.getString(\"status\"), \"accepted\")) {\r\n                                                            BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);\r\n                                                            Book bookHere = requestHere.getBook();\r\n                                                            String sentence = \"Delivery time and location set for \\n Book: \" + bookHere.getTitle();\r\n                                                            Toast toast = Toast.makeText(borrowerHomepage,\r\n                                                                    sentence, Toast.LENGTH_LONG);\r\n                                                            //toast.show();\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    if(Objects.equals(value.getString(\"status\"), \"accepted\")){\r\n                                                        if(value.get(\"time\") == null){\r\n                                                            BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);\r\n                                                            Book bookHere = requestHere.getBook();\r\n                                                            String sentence = \"Owner have accepted you request on \\n\" + bookHere.getTitle();\r\n                                                            Toast toast = Toast.makeText(borrowerHomepage, sentence , Toast.LENGTH_LONG);\r\n                                                            //toast.show();\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            });\r\n                                    borrowerHomepage.addListenerRegistration(listenerRegistration);\r\n                                    borrowerHomepage.addIsbn(dc.getDocument().getId());\r\n                                    break;\r\n                                case MODIFIED:\r\n                                    String isbn = dc.getDocument().getId();\r\n                                    if(borrowerHomepage.getIsbns().contains(isbn)){\r\n                                        int index = borrowerHomepage.getIsbns().indexOf(isbn);\r\n                                        borrowerHomepage.removeListenerRegistration(index);\r\n                                    }else{\r\n                                        ListenerRegistration listenerRegistration1 = dc.getDocument().getReference()\r\n                                                .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                                                    @Override\r\n                                                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                                        if(value.get(\"time\") != null){\r\n                                                            if(Objects.equals(value.getString(\"status\"), \"accepted\")) {\r\n                                                                BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);\r\n                                                                Book bookHere = requestHere.getBook();\r\n                                                                String sentence = \"Delivery time and location set for \\n Book: \" + bookHere.getTitle();\r\n                                                                Toast toast = Toast.makeText(borrowerHomepage,\r\n                                                                        sentence, Toast.LENGTH_LONG);\r\n                                                                toast.show();\r\n                                                            }\r\n                                                        }\r\n\r\n                                                        if(Objects.equals(value.getString(\"status\"), \"accepted\")){\r\n                                                            if(value.get(\"time\") == null){\r\n                                                                BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);\r\n                                                                Book bookHere = requestHere.getBook();\r\n                                                                String sentence = \"Owner have accepted you request on \\n\" + bookHere.getTitle();\r\n                                                                Toast toast = Toast.makeText(borrowerHomepage, sentence , Toast.LENGTH_LONG);\r\n                                                                toast.show();\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                });\r\n                                        borrowerHomepage.addListenerRegistration(listenerRegistration1);\r\n                                        borrowerHomepage.addIsbn(dc.getDocument().getId());\r\n                                    }\r\n                                    break;\r\n\r\n                                case REMOVED:\r\n                                    String isbn1 = dc.getDocument().getId();\r\n                                    if(borrowerHomepage.getIsbns().contains(isbn1)) {\r\n                                        int index = borrowerHomepage.getIsbns().indexOf(isbn1);\r\n                                        borrowerHomepage.removeListenerRegistration(index);\r\n                                    }\r\n                                default:\r\n                                    break;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/DataBaseManager.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/DataBaseManager.java	(date 1606441158922)
@@ -869,28 +869,33 @@
                         for (final DocumentChange dc : value.getDocumentChanges()) {
                             switch (dc.getType()){
                                 case ADDED:
+                                    System.out.println(dc.getDocument().get("notify"));
                                     ListenerRegistration listenerRegistration = dc.getDocument().getReference()
                                             .addSnapshotListener(new EventListener<DocumentSnapshot>() {
                                                 @Override
                                                 public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
                                                     if(value.get("time") != null){
-                                                        if(Objects.equals(value.getString("status"), "accepted")) {
-                                                            BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                        BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                        System.out.println("1");
+                                                        if(requestHere.getBook().getStatus().equals("accepted") && !requestHere.getNotify()) {
+                                                            dc.getDocument().getReference().update("notify", true);
                                                             Book bookHere = requestHere.getBook();
                                                             String sentence = "Delivery time and location set for \n Book: " + bookHere.getTitle();
                                                             Toast toast = Toast.makeText(borrowerHomepage,
                                                                     sentence, Toast.LENGTH_LONG);
-                                                            //toast.show();
+                                                            toast.show();
                                                         }
                                                     }
 
-                                                    if(Objects.equals(value.getString("status"), "accepted")){
+                                                    BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                    if(requestHere.getBook().getStatus().equals("accepted") && !requestHere.getNotify()){
+                                                        System.out.println("2");
                                                         if(value.get("time") == null){
-                                                            BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                            dc.getDocument().getReference().update("notify", true);
                                                             Book bookHere = requestHere.getBook();
                                                             String sentence = "Owner have accepted you request on \n" + bookHere.getTitle();
                                                             Toast toast = Toast.makeText(borrowerHomepage, sentence , Toast.LENGTH_LONG);
-                                                            //toast.show();
+                                                            toast.show();
                                                         }
                                                     }
                                                 }
@@ -899,6 +904,7 @@
                                     borrowerHomepage.addIsbn(dc.getDocument().getId());
                                     break;
                                 case MODIFIED:
+                                    System.out.println("modified");
                                     String isbn = dc.getDocument().getId();
                                     if(borrowerHomepage.getIsbns().contains(isbn)){
                                         int index = borrowerHomepage.getIsbns().indexOf(isbn);
@@ -909,8 +915,9 @@
                                                     @Override
                                                     public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
                                                         if(value.get("time") != null){
-                                                            if(Objects.equals(value.getString("status"), "accepted")) {
-                                                                BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                            BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                            System.out.println("3");
+                                                            if(requestHere.getBook().getStatus().equals("accepted")) {
                                                                 Book bookHere = requestHere.getBook();
                                                                 String sentence = "Delivery time and location set for \n Book: " + bookHere.getTitle();
                                                                 Toast toast = Toast.makeText(borrowerHomepage,
@@ -919,9 +926,10 @@
                                                             }
                                                         }
 
-                                                        if(Objects.equals(value.getString("status"), "accepted")){
+                                                        BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
+                                                        if(requestHere.getBook().getStatus().equals("accepted")){
+                                                            System.out.println("4");
                                                             if(value.get("time") == null){
-                                                                BookRequest requestHere = dc.getDocument().toObject(BookRequest.class);
                                                                 Book bookHere = requestHere.getBook();
                                                                 String sentence = "Owner have accepted you request on \n" + bookHere.getTitle();
                                                                 Toast toast = Toast.makeText(borrowerHomepage, sentence , Toast.LENGTH_LONG);
Index: app/src/main/java/com/example/webook/OwnerHomepage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.util.ArrayList;\r\n/**\r\n * This is an activity shows homepage for usertype = owner\r\n */\r\npublic class OwnerHomepage extends AppCompatActivity {\r\n    private Owner owner;\r\n    private ArrayList<Book> bookArrayList = new ArrayList<Book>();\r\n    private ListView bookListView;\r\n    private BookList bookList;\r\n    private BookList bookListAvailable;\r\n    private BookList bookListRequested;\r\n    private BookList bookListAccepted;\r\n    private BookList bookListBorrowed;\r\n    private ArrayList<Book> availableBookArrayList = new ArrayList<>();\r\n    private ArrayList<Book> requestedBookArrayList = new ArrayList<>();\r\n    private ArrayList<Book> acceptedBookArrayList = new ArrayList<>();\r\n    private ArrayList<Book> borrowedBookArrayList = new ArrayList<>();\r\n    private String currentListView = \"all\";\r\n    private DataBaseManager dataBaseManager = new DataBaseManager();\r\n    private Integer before;\r\n    private Button search;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.activity_owner_homepage);\r\n\r\n        TextView me = findViewById(R.id.owner_me_tab);\r\n        TextView books = findViewById(R.id.owner_books_tab);\r\n        TextView request = findViewById(R.id.owner_requests_tab);\r\n        search = findViewById(R.id.owner_search);\r\n        search.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(OwnerHomepage.this,OwnerSearch.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        before = 0;\r\n        Intent intent = getIntent();\r\n        owner = (Owner) intent.getSerializableExtra(\"user\");\r\n\r\n        bookListView = findViewById(R.id.owner_book_list);\r\n\r\n\r\n        TextView all = findViewById(R.id.owner_all);\r\n        TextView available = findViewById(R.id.owner_available);\r\n        TextView requested = findViewById(R.id.owner_requested);\r\n        TextView accepted = findViewById(R.id.owner_accepted);\r\n        TextView borrowed = findViewById(R.id.owner_borrowed);\r\n\r\n        dataBaseManager.OwnerHomePageAddBookSnapShotListener(this, owner.getUsername());\r\n        dataBaseManager.OwnerHomePageAddUserSnapShotListener(this, owner.getUsername());\r\n\r\n        bookList = new BookList( OwnerHomepage.this, bookArrayList);\r\n        bookListView.setAdapter(bookList);\r\n        bookListAvailable = new BookList(OwnerHomepage.this, availableBookArrayList);\r\n        bookListRequested = new BookList(OwnerHomepage.this, requestedBookArrayList);\r\n        bookListAccepted = new BookList(OwnerHomepage.this, acceptedBookArrayList);\r\n        bookListBorrowed = new BookList(OwnerHomepage.this, borrowedBookArrayList);\r\n\r\n        requested.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(OwnerHomepage.this, OwnerRequestPageActivity.class);\r\n                intent.putExtra(\"user\", owner);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.push_up_in,R.anim.push_up_out);\r\n            }\r\n        });\r\n\r\n\r\n        me.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(OwnerHomepage.this, OwnerProfileActivity.class);\r\n                intent.putExtra(\"user\", owner);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.push_up_in,R.anim.push_up_out);\r\n            }\r\n        });\r\n\r\n        request.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(OwnerHomepage.this, OwnerRequestPageActivity.class);\r\n                intent.putExtra(\"user\", owner);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.push_up_in,R.anim.push_up_out);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        all.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bookListView.setAdapter(bookList);\r\n                currentListView = \"all\";\r\n            }\r\n        });\r\n\r\n        available.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bookListView.setAdapter(bookListAvailable);\r\n                currentListView = \"available\";\r\n            }\r\n        });\r\n\r\n        requested.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bookListView.setAdapter(bookListRequested);\r\n                currentListView = \"requested\";\r\n            }\r\n        });\r\n\r\n        accepted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bookListView.setAdapter(bookListAccepted);\r\n                currentListView = \"accepted\";\r\n            }\r\n        });\r\n\r\n        borrowed.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bookListView.setAdapter(bookListBorrowed);\r\n                currentListView = \"borrowed\";\r\n            }\r\n        });\r\n\r\n        //This is a comment\r\n        bookListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                Intent intent = new Intent(OwnerHomepage.this, OwnerBookProfile.class);\r\n                Book selectBook;\r\n                if (currentListView.equals(\"all\")) {\r\n                    selectBook = bookArrayList.get(i);\r\n                } else if (currentListView.equals(\"available\")){\r\n                    selectBook = availableBookArrayList.get(i);\r\n                } else if (currentListView.equals(\"requested\")) {\r\n                    selectBook = requestedBookArrayList.get(i);\r\n                } else if (currentListView.equals(\"accepted\")) {\r\n                    selectBook = acceptedBookArrayList.get(i);\r\n                } else if (currentListView.equals(\"borrowed\")) {\r\n                    selectBook = borrowedBookArrayList.get(i);\r\n                } else{\r\n                    selectBook = null;\r\n                    System.out.println(\"Error\");\r\n                }\r\n                intent.putExtra(\"selectBook\", selectBook);\r\n                intent.putExtra(\"user\", owner);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.push_right_in,R.anim.push_right_out);\r\n            }\r\n\r\n        });\r\n\r\n        final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"users\").document(owner.getUsername()).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot documentSnapshot = task.getResult();\r\n                    if(documentSnapshot.exists()){\r\n                        before = ((ArrayList<String>)documentSnapshot.get(\"requestList\")).size();\r\n                        db.collection(\"users\").document(owner.getUsername()).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                Integer now = ((ArrayList<String>)value.get(\"requestList\")).size();\r\n                                if(before < now){\r\n                                    String sentence = \"You have received a new request\";\r\n                                    Toast toast = Toast.makeText(OwnerHomepage.this, sentence, Toast.LENGTH_LONG);\r\n                                    toast.show();\r\n                                }\r\n                                before = now;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This sets the resets the bookList, This step is required for the \"all\" listView to behave correctly\r\n     */\r\n    public void setBookList(){\r\n        this.bookList = new BookList(OwnerHomepage.this, this.bookArrayList);\r\n        this.bookListView.setAdapter(bookList);\r\n    }\r\n\r\n\r\n    /**\r\n     * This updates the listView\r\n     */\r\n    public void dataChanged(){\r\n        this.bookList.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * This returns the owner's book list\r\n     * @return\r\n     * this is the current owner book list\r\n     */\r\n    public ArrayList<String> getOwnerBookList(){\r\n        return this.owner.getBookList();\r\n    }\r\n\r\n\r\n    /**\r\n     * This adds a book to the owner's book list\r\n     * @param isbn\r\n     * this is teh isbn of the book to be added\r\n     */\r\n    public void ownerAddBook(String isbn){\r\n        this.owner.addBook(isbn);\r\n    }\r\n\r\n\r\n    /**\r\n     * This sets the owner's book list\r\n     * @param bookList\r\n     * this is the candidate book list\r\n     */\r\n    public void ownerSetBookList(ArrayList<String> bookList){\r\n        this.owner.setBookList(bookList);\r\n    }\r\n\r\n\r\n    /**\r\n     * This sets the bookArrayList variable\r\n     * @param bookArrayList\r\n     * this is the candidate bookArrayList\r\n     */\r\n    public void setBookArrayList(ArrayList<Book> bookArrayList){\r\n        this.bookArrayList = bookArrayList;\r\n    }\r\n\r\n\r\n    /**\r\n     * This adds a book to the bookArrayList\r\n     * @param book\r\n     * this is the candidate book\r\n     */\r\n    public void addBookArrayList(Book book){\r\n        this.bookArrayList.add(book);\r\n    }\r\n\r\n\r\n    /**\r\n     * This gets the books that are available\r\n     * then add them to bookListAvailable\r\n     */\r\n    public void getAvailable() {\r\n        availableBookArrayList.clear();\r\n        for (int i = 0; i < bookArrayList.size(); i++) {\r\n            if (bookArrayList.get(i).getStatus().equals(\"available\")) {\r\n                availableBookArrayList.add(bookArrayList.get(i));\r\n            }\r\n        }\r\n        bookListAvailable.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * This gets the books that are requested\r\n     * then add them to bookListRequested\r\n     */\r\n    public void getRequested() {\r\n        requestedBookArrayList.clear();\r\n        for (int i = 0; i < bookArrayList.size(); i++) {\r\n            if (bookArrayList.get(i).getStatus().equals(\"requested\")) {\r\n                requestedBookArrayList.add(bookArrayList.get(i));\r\n            }\r\n        }\r\n        bookListRequested.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * This gets the books that are accepted\r\n     * then add them to bookListAccepted\r\n     */\r\n    public void getAccepted() {\r\n        acceptedBookArrayList.clear();\r\n        for (int i = 0; i < bookArrayList.size(); i++) {\r\n            if (bookArrayList.get(i).getStatus().equals(\"accepted\")) {\r\n                acceptedBookArrayList.add(bookArrayList.get(i));\r\n            }\r\n        }\r\n        bookListAccepted.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * This gets the books that are borrowed\r\n     * then add them to bookListBorrowed\r\n     */\r\n    public void getBorrowed() {\r\n        borrowedBookArrayList.clear();\r\n        for (int i = 0; i < bookArrayList.size(); i++) {\r\n            if (bookArrayList.get(i).getStatus().equals(\"borrowed\")) {\r\n                borrowedBookArrayList.add(bookArrayList.get(i));\r\n            }\r\n        }\r\n        bookListBorrowed.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/OwnerHomepage.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/OwnerHomepage.java	(date 1606439026119)
@@ -19,6 +19,7 @@
 import com.google.firebase.firestore.EventListener;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.FirebaseFirestoreException;
+import com.google.firebase.firestore.ListenerRegistration;
 
 import org.w3c.dom.Text;
 
@@ -43,6 +44,8 @@
     private DataBaseManager dataBaseManager = new DataBaseManager();
     private Integer before;
     private Button search;
+    private ListenerRegistration listenerRegistration;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -192,7 +195,7 @@
                     DocumentSnapshot documentSnapshot = task.getResult();
                     if(documentSnapshot.exists()){
                         before = ((ArrayList<String>)documentSnapshot.get("requestList")).size();
-                        db.collection("users").document(owner.getUsername()).addSnapshotListener(new EventListener<DocumentSnapshot>() {
+                        listenerRegistration = db.collection("users").document(owner.getUsername()).addSnapshotListener(new EventListener<DocumentSnapshot>() {
                             @Override
                             public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
                                 Integer now = ((ArrayList<String>)value.get("requestList")).size();
@@ -211,6 +214,13 @@
     }
 
 
+    @Override
+    public void onBackPressed() {
+        super.onBackPressed();
+        listenerRegistration.remove();
+        finish();
+    }
+
     /**
      * This sets the resets the bookList, This step is required for the "all" listView to behave correctly
      */
Index: app/src/main/java/com/example/webook/OwnerSearchUserPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\n/**\r\n * This is activity shows search results as a list of user\r\n * User click on item in list to jump to profile activity\r\n * @pram EXTRA_MESSAGE User item to show in profile\r\n */\r\npublic class OwnerSearchUserPage extends AppCompatActivity {\r\n    ListView userList;\r\n    EditText input;\r\n    ArrayList<User> dataList;\r\n    ArrayAdapter<User> userAdapter;\r\n    private DataBaseManager dataBaseManager;\r\n    public static final String EXTRA_MESSAGE = \"com.example.BorrowerSearchUserPage.MESSAGE\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.search_result);\r\n        final String TAG = \"User\";\r\n        // User's key for search\r\n        Intent intent = getIntent();\r\n        final String message = intent.getStringExtra(BorrowerSearch.EXTRA_MESSAGE);\r\n        userList = findViewById(R.id.search_result_list);\r\n//        input = findViewById(R.id.search_book_user_result);\r\n//        input.setHint(\"Searching users\");\r\n        dataList = new ArrayList<>();\r\n        userAdapter = new UserList(this, dataList);\r\n        userList.setAdapter(userAdapter);\r\n        final ArrayList<String> userNameList = new ArrayList<String>();\r\n        dataBaseManager = new DataBaseManager();\r\n\r\n        dataBaseManager.OwnerSearchUser(message,this);\r\n\r\n        userList.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                Intent intent = new Intent(OwnerSearchUserPage.this,ShowUserDetail.class);\r\n                User user = dataList.get(i);\r\n                intent.putExtra(EXTRA_MESSAGE, user);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/OwnerSearchUserPage.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/OwnerSearchUserPage.java	(date 1606439026128)
@@ -56,7 +56,7 @@
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                 Intent intent = new Intent(OwnerSearchUserPage.this,ShowUserDetail.class);
                 User user = dataList.get(i);
-                intent.putExtra(EXTRA_MESSAGE, user);
+                intent.putExtra("user", user);
                 startActivity(intent);
             }
         });
Index: app/src/main/java/com/example/webook/BorrowerSearchUserPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webook;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.github.nuptboyzhb.lib.SuperSwipeRefreshLayout;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\n\r\nimport java.util.ArrayList;\r\n/**\r\n * This is activity shows search results as a list of user\r\n * User click on item in list to jump to profile activity\r\n * @pram EXTRA_MESSAGE User item to show in profile\r\n */\r\npublic class BorrowerSearchUserPage extends AppCompatActivity {\r\n    ListView userList;\r\n    EditText input;\r\n    ArrayList<User> dataList;\r\n    ArrayAdapter<User> userAdapter;\r\n    private DataBaseManager dataBaseManager;\r\n    private SuperSwipeRefreshLayout swipeRefreshLayout;\r\n    public static final String EXTRA_MESSAGE = \"com.example.BorrowerSearchUserPage.MESSAGE\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.search_result);\r\n        final String TAG = \"User\";\r\n        // User's key for search\r\n        Intent intent = getIntent();\r\n        final String message = intent.getStringExtra(BorrowerSearch.EXTRA_MESSAGE);\r\n        userList = findViewById(R.id.search_result_list);\r\n//        input = findViewById(R.id.search_book_user_result);\r\n        dataList = new ArrayList<>();\r\n        userAdapter = new UserList(this, dataList);\r\n        userList.setAdapter(userAdapter);\r\n        final ArrayList<String> userNameList = new ArrayList<String>();\r\n        dataBaseManager = new DataBaseManager();\r\n\r\n        dataBaseManager.BorrowerSearchUser(message,this);\r\n        findViewById(R.id.loadingPanelMid).setVisibility(View.GONE);\r\n\r\n        userList.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                Intent intent = new Intent(BorrowerSearchUserPage.this,ShowUserDetail.class);\r\n                User user = dataList.get(i);\r\n                intent.putExtra(EXTRA_MESSAGE, user);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.push_left_in,R.anim.push_left_out);\r\n            }\r\n        });\r\n\r\n        swipeRefreshLayout = (SuperSwipeRefreshLayout) findViewById(R.id.swipe_refresh);\r\n        swipeRefreshLayout\r\n                .setOnPullRefreshListener(new SuperSwipeRefreshLayout.OnPullRefreshListener() {\r\n\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        new Handler().postDelayed(new Runnable() {\r\n\r\n                            @Override\r\n                            public void run() {\r\n                                final String TAG = \"User\";\r\n                                // User's key for search\r\n                                Intent intent = getIntent();\r\n                                final String message = intent.getStringExtra(BorrowerSearch.EXTRA_MESSAGE);\r\n                                userList = findViewById(R.id.search_result_list);\r\n//                                input = findViewById(R.id.search_book_user_result);\r\n                                dataList = new ArrayList<>();\r\n                                userAdapter = new UserList(BorrowerSearchUserPage.this, dataList);\r\n                                userList.setAdapter(userAdapter);\r\n                                final ArrayList<String> userNameList = new ArrayList<String>();\r\n                                dataBaseManager = new DataBaseManager();\r\n                                \r\n                                dataBaseManager.BorrowerSearchUser(message,BorrowerSearchUserPage.this);\r\n\r\n                                swipeRefreshLayout.setRefreshing(false);\r\n                            }\r\n                        }, 1000);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onPullDistance(int distance) {\r\n                        System.out.println(\"debug:distance = \" + distance);\r\n                        // myAdapter.updateHeaderHeight(distance);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onPullEnable(boolean enable) {\r\n                    }\r\n                });\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/webook/BorrowerSearchUserPage.java	(revision e3826db9471359825bc619abba1447ce120402dc)
+++ app/src/main/java/com/example/webook/BorrowerSearchUserPage.java	(date 1606439026137)
@@ -61,7 +61,7 @@
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                 Intent intent = new Intent(BorrowerSearchUserPage.this,ShowUserDetail.class);
                 User user = dataList.get(i);
-                intent.putExtra(EXTRA_MESSAGE, user);
+                intent.putExtra("user", user);
                 startActivity(intent);
                 overridePendingTransition(R.anim.push_left_in,R.anim.push_left_out);
             }
